# -*- coding: utf-8 -*-
"""prediction3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xufI9Wdn7tR4iuDvpdUjGjqnezU425cw
"""

import pandas as pd
import pickle

import streamlit as st
import pandas as pd
import pickle

class ModelPredictor:
    def __init__(self, model_path):
        with open(model_path, 'rb') as file:
            self.model = pickle.load(file)

    def preprocess_input(self, input_data):
        df = pd.DataFrame([input_data])
        return df

    def predict(self, input_data):
        preprocessed_data = self.preprocess_input(input_data)
        prediction = self.model.predict(preprocessed_data)
        return prediction

def main():
    st.title('Customer Churn Prediction')

    # Membuat form input untuk user
    with st.form(key='my_form'):
        credit_score = st.number_input('Credit Score', min_value=0, value=650)
        age = st.number_input('Age', min_value=18, value=34)
        tenure = st.number_input('Tenure', min_value=0, max_value=20, value=5)
        balance = st.number_input('Balance', value=50000)
        num_products = st.number_input('Number of Products', min_value=0, value=2)
        has_cr_card = st.selectbox('Has Credit Card', options=[0, 1], format_func=lambda x: 'Yes' if x == 1 else 'No')
        is_active = st.selectbox('Is Active Member', options=[0, 1], format_func=lambda x: 'Yes' if x == 1 else 'No')
        estimated_salary = st.number_input('Estimated Salary', value=60000)
        geography = st.selectbox('Geography', options=['France', 'Spain', 'Germany'])
        gender = st.selectbox('Gender', options=['Male', 'Female'])

        submit_button = st.form_submit_button(label='Predict')

    if submit_button:
        predictor = ModelPredictor('/content/best_data (2).pkl')
        new_input = {
            'CreditScore': credit_score, 'Age': age, 'Tenure': tenure,
            'Balance': balance, 'NumOfProducts': num_products, 'HasCrCard': has_cr_card,
            'IsActiveMember': is_active, 'EstimatedSalary': estimated_salary,
            'Geography': geography, 'Gender': gender
        }
        result = predictor.predict(new_input)
        st.write(f"Hasil Prediksi: {'Churn' if result[0] == 1 else 'Not Churn'}")

if __name__ == "__main__":
    main()